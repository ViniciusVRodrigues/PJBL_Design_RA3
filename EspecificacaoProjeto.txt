ESPECIFICAÇÃO PARA O PROJETO REFERENTE À AVALIAÇÃO SOMATIVA DO RA3

Fazer o mapeamento objeto relacional (ORM) com no mínimo 5 classes. Não é obrigatório o uso de herança;
Elaborar o diagrama de classes;
Deve ser implementado o CRUD para cada uma delas;
Deve ser implementado em Java e utilizar o JPA com EclipseLink (conforme vimos em sala).

Deve ser enviado para o Canvas:

O diagrama de classes;
Código-fonte do projeto;
Reflexão sobre as maiores dificuldades neste projeto.

As cinco classes serão:

Classe Cliente (Customer)
Atributos: nome, email, endereco, telefone, ID
Métodos: registrarCliente(), atualizarInformacoes(), visualizarHistoricoPedidos()

Classe Produto (Product)
Atributos: nome, descricao, preco, estoque, ID
Métodos: atualizarEstoque(), verificarDisponibilidade()

Classe Pedido (Order)
Atributos: ID, data, status, valorTotal, cliente: Cliente, produtos: List<Produto>
Métodos: calcularValorTotal(), atualizarStatus(), confirmarPedido()

Classe CarrinhoDeCompras (ShoppingCart)
Atributos: ID, produtos: List<Produto>, quantidadeTotal, valorTotal
Métodos: adicionarProduto(), removerProduto(), calcularValorTotal()

Classe Pagamento (Payment)
Atributos: ID, dataPagamento, valor, metodoPagamento, status
Métodos: processarPagamento(), confirmarPagamento()

Relações entre as Classes
Associação:

Cliente 1 pra 1 CarrinhoDeCompras
Cliente 1 pra 1 Pagamento
Cliente 1 pra 1 Pedido
CarrinhoDeCompras N pra N Produto.
Pedido N pra N Produto.
Pedido 1 pra 1 Pagamento.

Esquema de Pacotes
├── apresentacao       // Camada de apresentação (UI)
│   ├── ClienteUI.java
│   ├── ProdutoUI.java
│   └── PedidoUI.java
│
├── negocio            // Camada de negócio (Lógica de Negócio)
│   ├── ClienteService.java
│   ├── ProdutoService.java
│   ├── PedidoService.java
│   ├── CarrinhoDeComprasService.java
│   └── PagamentoService.java
│
├── dados              // Camada de dados (Acesso a Dados)
│   ├── ClienteRepository.java
│   ├── ProdutoRepository.java
│   └── PedidoRepository.java
│
└── modelo             // Entidades e classes de modelo de dados
    ├── Cliente.java
    ├── Produto.java
    ├── Pedido.java
    ├── CarrinhoDeCompras.java
    └── Pagamento.java